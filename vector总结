//最近vector用的有点多哈，稍微总结一下

1.初始化
  vector<int> a(10);
  //定义具有10个整型元素的向量（尖括号内可以是任何的合法数据类型），不具有初始，其值不确定。10个元素的索引从0开始。超界不会报错，但是会出现奇怪的值。
  
  vector<int> a(10,1);
  //定义具有10个整型元素的向量，元素初始值为1。
  
  vector<int> a(b);
  //相当于是赋值，定义一个与向量b完全相同的向量a。
  
  vector<int> a(b.begin()+n,b.begin()+m);
  //将向量b中索引n<=i<m的元素赋给a，一共m-n个。
  
  int b[3]={1,2,3}; 
  vector<int> a(b,b+3);
  //从数组中获得初始值

2.常用内置函数
  #include<vector>
  vector<int> a,b;
  a.assign(b,begin(),b.begin()+3);       //assign是分配的意思吧好像
  //b是向量，将b的0~2个元素赋值给向量a
  a.assign(4,2);
  //使a填充进4个值为2的元素
  a.back();
  //返回a的最后一个元素
  a.front();
  //返回a的第一个个元素
  a[i];
  //a的索引为i的元素（当且仅当该元素存在）
  a.clear();
  //清空a中的所有元素
  a.empty();
  //判断a是否为空，空则返回true，否则返回false
  a.pop_back();
  //删除a中的最后一个元素，没有返回值。pop_back()是void类型的函数。
  a.erase(a.begin()+1,a.begin()+5);
  //删除索引为1<=i<5的元素，后面的元素依次前移，空下的位置随机元素填充。
  a.push_back(x);
  //在a的最后一个向量后插入一个元素x
  a.insert(a.begin()+1,5);
  //在a的索引为1的位置插入一个元素，其值为5
  a.insert(a.begin()+1,3,5);
  //在a的索引为1的位置开始插入三个数，其值均为5
  a.insert(a.begin(),b+3,b+6);
  //从a的索引为0的位置开始，插入数组b的索引3<=i<6的共3个元素。
  a.size();
  //返回a中元素的个数
  a.capacity();
  //返回a在内存中最多可以容纳的元素的个数。如果定义时有规定，就会返回规定值；vector<int> a这样定义时返回的是0.
  a.resize(10);
  //将a的元素个数调整为10个，多则删少则补。补的值都是0。
  a.resize(10,2);
  //将a中的元素个数调整为10个，多删少补。删掉不改变值，补充时补充的值全部都是2。
  a.reverse(100);
  //把a的容量扩充到100，就是只能扩充，然后补的值都是随机数。
  a.swap(b);
  //b也是向量。把a的元素和b的元素整体交换。
  a==b;
  //向量的比较操作。!= >= <= > <都可以
  
